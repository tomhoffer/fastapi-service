version: '3.9'

services:
  postgres-dev:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/scripts/tables.sql:/docker-entrypoint-initdb.d/init.sql

    environment:
      - POSTGRES_PASSWORD=Password
      - POSTGRES_USER=User
      - POSTGRES_DB=dummy_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U User -d dummy_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  fastapi-server:
    ports:
      - 80:80
    build: .
    container_name: fastapi-server
    depends_on:
      postgres-dev:
        condition: service_healthy
    environment:
      - POSTGRES_DB_PASSWORD=PM_password
      - POSTGRES_DB_USER=PM_user
      - POSTGRES_DB_NAME=pm_assignment
      - POSTGRES_DB_HOST=postgres-dev

  intg-tests:
    build:
      dockerfile: Dockerfile-intg-api-test
    container_name: intg-tests
    depends_on:
      postgres-dev:
        condition: service_healthy
    command: pytest test/integration
    environment:
      - POSTGRES_DB_PASSWORD=PM_password
      - POSTGRES_DB_USER=PM_user
      - POSTGRES_DB_NAME=pm_assignment
      - POSTGRES_DB_HOST=postgres-dev

  api-tests:
    build:
      dockerfile: Dockerfile-intg-api-test
    container_name: api-tests
    depends_on:
      postgres-dev:
        condition: service_healthy
    command: pytest test/api
    environment:
      - POSTGRES_DB_PASSWORD=PM_password
      - POSTGRES_DB_USER=PM_user
      - POSTGRES_DB_NAME=pm_assignment
      - POSTGRES_DB_HOST=postgres-dev

volumes:
  postgres-data:
